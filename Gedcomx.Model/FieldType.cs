// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;

namespace Gx.Types {

  /// <remarks>
  ///  Enumeration of known fields.
  /// </remarks>
  /// <summary>
  ///  Enumeration of known fields.
  /// </summary>
  public enum FieldType {

    /// <summary>
    ///  Unspecified enum value.
    /// </summary>
    [System.Xml.Serialization.XmlEnumAttribute(Name="__NULL__")]
    [System.Xml.Serialization.SoapEnumAttribute(Name="__NULL__")]
    NULL,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Age,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Date,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Place,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Gender,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Name,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Role,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Years,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Months,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Days,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Hours,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Minutes,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Year,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Month,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Day,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Hour,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Minute,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Address,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Cemetery,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    City,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Church,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    County,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Country,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    District,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Hospital,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Island,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    MilitaryBase,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Mortuary,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Parish,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    PlotNumber,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    PostOffice,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    PostalCode,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Prison,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Province,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Section,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Ship,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    State,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Territory,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Town,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Township,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Ward,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Prefix,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Suffix,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Given,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    Surname,

    /// <summary>
    ///   Custom
    /// </summary>
    OTHER
  }

  /// <remarks>
  /// Utility class for converting to/from the QNames associated with FieldType.
  /// </remarks>
  /// <summary>
  /// Utility class for converting to/from the QNames associated with FieldType.
  /// </summary>
  public static class FieldTypeQNameUtil {

    /// <summary>
    /// Get the known FieldType for a given QName. If the QName isn't a known QName, FieldType.OTHER will be returned.
    /// </summary>
    public static FieldType ConvertFromKnownQName(string qname) {
      if (qname != null) {
        if ("http://gedcomx.org/Age".Equals(qname)) {
          return FieldType.Age;
        }
        if ("http://gedcomx.org/Date".Equals(qname)) {
          return FieldType.Date;
        }
        if ("http://gedcomx.org/Place".Equals(qname)) {
          return FieldType.Place;
        }
        if ("http://gedcomx.org/Gender".Equals(qname)) {
          return FieldType.Gender;
        }
        if ("http://gedcomx.org/Name".Equals(qname)) {
          return FieldType.Name;
        }
        if ("http://gedcomx.org/Role".Equals(qname)) {
          return FieldType.Role;
        }
        if ("http://gedcomx.org/Years".Equals(qname)) {
          return FieldType.Years;
        }
        if ("http://gedcomx.org/Months".Equals(qname)) {
          return FieldType.Months;
        }
        if ("http://gedcomx.org/Days".Equals(qname)) {
          return FieldType.Days;
        }
        if ("http://gedcomx.org/Hours".Equals(qname)) {
          return FieldType.Hours;
        }
        if ("http://gedcomx.org/Minutes".Equals(qname)) {
          return FieldType.Minutes;
        }
        if ("http://gedcomx.org/Year".Equals(qname)) {
          return FieldType.Year;
        }
        if ("http://gedcomx.org/Month".Equals(qname)) {
          return FieldType.Month;
        }
        if ("http://gedcomx.org/Day".Equals(qname)) {
          return FieldType.Day;
        }
        if ("http://gedcomx.org/Hour".Equals(qname)) {
          return FieldType.Hour;
        }
        if ("http://gedcomx.org/Minute".Equals(qname)) {
          return FieldType.Minute;
        }
        if ("http://gedcomx.org/Address".Equals(qname)) {
          return FieldType.Address;
        }
        if ("http://gedcomx.org/Cemetery".Equals(qname)) {
          return FieldType.Cemetery;
        }
        if ("http://gedcomx.org/City".Equals(qname)) {
          return FieldType.City;
        }
        if ("http://gedcomx.org/Church".Equals(qname)) {
          return FieldType.Church;
        }
        if ("http://gedcomx.org/County".Equals(qname)) {
          return FieldType.County;
        }
        if ("http://gedcomx.org/Country".Equals(qname)) {
          return FieldType.Country;
        }
        if ("http://gedcomx.org/District".Equals(qname)) {
          return FieldType.District;
        }
        if ("http://gedcomx.org/Hospital".Equals(qname)) {
          return FieldType.Hospital;
        }
        if ("http://gedcomx.org/Island".Equals(qname)) {
          return FieldType.Island;
        }
        if ("http://gedcomx.org/MilitaryBase".Equals(qname)) {
          return FieldType.MilitaryBase;
        }
        if ("http://gedcomx.org/Mortuary".Equals(qname)) {
          return FieldType.Mortuary;
        }
        if ("http://gedcomx.org/Parish".Equals(qname)) {
          return FieldType.Parish;
        }
        if ("http://gedcomx.org/PlotNumber".Equals(qname)) {
          return FieldType.PlotNumber;
        }
        if ("http://gedcomx.org/PostOffice".Equals(qname)) {
          return FieldType.PostOffice;
        }
        if ("http://gedcomx.org/PostalCode".Equals(qname)) {
          return FieldType.PostalCode;
        }
        if ("http://gedcomx.org/Prison".Equals(qname)) {
          return FieldType.Prison;
        }
        if ("http://gedcomx.org/Province".Equals(qname)) {
          return FieldType.Province;
        }
        if ("http://gedcomx.org/Section".Equals(qname)) {
          return FieldType.Section;
        }
        if ("http://gedcomx.org/Ship".Equals(qname)) {
          return FieldType.Ship;
        }
        if ("http://gedcomx.org/State".Equals(qname)) {
          return FieldType.State;
        }
        if ("http://gedcomx.org/Territory".Equals(qname)) {
          return FieldType.Territory;
        }
        if ("http://gedcomx.org/Town".Equals(qname)) {
          return FieldType.Town;
        }
        if ("http://gedcomx.org/Township".Equals(qname)) {
          return FieldType.Township;
        }
        if ("http://gedcomx.org/Ward".Equals(qname)) {
          return FieldType.Ward;
        }
        if ("http://gedcomx.org/Prefix".Equals(qname)) {
          return FieldType.Prefix;
        }
        if ("http://gedcomx.org/Suffix".Equals(qname)) {
          return FieldType.Suffix;
        }
        if ("http://gedcomx.org/Given".Equals(qname)) {
          return FieldType.Given;
        }
        if ("http://gedcomx.org/Surname".Equals(qname)) {
          return FieldType.Surname;
        }
      }
      return FieldType.OTHER;
    }

    /// <summary>
    /// Convert the known FieldType to a QName. If FieldType.OTHER, an ArgumentException will be thrown.
    /// </summary>
    public static string ConvertToKnownQName(FieldType known) {
      switch (known) {
        case FieldType.Age:
          return "http://gedcomx.org/Age";
        case FieldType.Date:
          return "http://gedcomx.org/Date";
        case FieldType.Place:
          return "http://gedcomx.org/Place";
        case FieldType.Gender:
          return "http://gedcomx.org/Gender";
        case FieldType.Name:
          return "http://gedcomx.org/Name";
        case FieldType.Role:
          return "http://gedcomx.org/Role";
        case FieldType.Years:
          return "http://gedcomx.org/Years";
        case FieldType.Months:
          return "http://gedcomx.org/Months";
        case FieldType.Days:
          return "http://gedcomx.org/Days";
        case FieldType.Hours:
          return "http://gedcomx.org/Hours";
        case FieldType.Minutes:
          return "http://gedcomx.org/Minutes";
        case FieldType.Year:
          return "http://gedcomx.org/Year";
        case FieldType.Month:
          return "http://gedcomx.org/Month";
        case FieldType.Day:
          return "http://gedcomx.org/Day";
        case FieldType.Hour:
          return "http://gedcomx.org/Hour";
        case FieldType.Minute:
          return "http://gedcomx.org/Minute";
        case FieldType.Address:
          return "http://gedcomx.org/Address";
        case FieldType.Cemetery:
          return "http://gedcomx.org/Cemetery";
        case FieldType.City:
          return "http://gedcomx.org/City";
        case FieldType.Church:
          return "http://gedcomx.org/Church";
        case FieldType.County:
          return "http://gedcomx.org/County";
        case FieldType.Country:
          return "http://gedcomx.org/Country";
        case FieldType.District:
          return "http://gedcomx.org/District";
        case FieldType.Hospital:
          return "http://gedcomx.org/Hospital";
        case FieldType.Island:
          return "http://gedcomx.org/Island";
        case FieldType.MilitaryBase:
          return "http://gedcomx.org/MilitaryBase";
        case FieldType.Mortuary:
          return "http://gedcomx.org/Mortuary";
        case FieldType.Parish:
          return "http://gedcomx.org/Parish";
        case FieldType.PlotNumber:
          return "http://gedcomx.org/PlotNumber";
        case FieldType.PostOffice:
          return "http://gedcomx.org/PostOffice";
        case FieldType.PostalCode:
          return "http://gedcomx.org/PostalCode";
        case FieldType.Prison:
          return "http://gedcomx.org/Prison";
        case FieldType.Province:
          return "http://gedcomx.org/Province";
        case FieldType.Section:
          return "http://gedcomx.org/Section";
        case FieldType.Ship:
          return "http://gedcomx.org/Ship";
        case FieldType.State:
          return "http://gedcomx.org/State";
        case FieldType.Territory:
          return "http://gedcomx.org/Territory";
        case FieldType.Town:
          return "http://gedcomx.org/Town";
        case FieldType.Township:
          return "http://gedcomx.org/Township";
        case FieldType.Ward:
          return "http://gedcomx.org/Ward";
        case FieldType.Prefix:
          return "http://gedcomx.org/Prefix";
        case FieldType.Suffix:
          return "http://gedcomx.org/Suffix";
        case FieldType.Given:
          return "http://gedcomx.org/Given";
        case FieldType.Surname:
          return "http://gedcomx.org/Surname";
        default:
          throw new System.ArgumentException("No known QName for: " + known, "known");
      }
    }
  }
}
