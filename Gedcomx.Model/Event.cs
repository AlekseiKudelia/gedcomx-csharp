using Gedcomx.Model.Rt;
// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;

namespace Gx.Conclusion
{

    /// <remarks>
    ///  A historical event.
    /// </remarks>
    /// <summary>
    ///  A historical event.
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://gedcomx.org/v1/", TypeName = "Event")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://gedcomx.org/v1/", TypeName = "Event")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://gedcomx.org/v1/", ElementName = "event")]
    [Newtonsoft.Json.JsonObject("events")]
    public partial class Event : Gx.Conclusion.Subject
    {

        private string _type;
        private Gx.Conclusion.DateInfo _date;
        private Gx.Conclusion.PlaceReference _place;
        private System.Collections.Generic.List<Gx.Conclusion.EventRole> _roles;
        /// <summary>
        ///  The type of the event.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName = "type")]
        [System.Xml.Serialization.SoapAttributeAttribute(AttributeName = "type")]
        [Newtonsoft.Json.JsonProperty("type")]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }

        /// <summary>
        ///  Convenience property for treating Type as an enum. See Gx.Types.EventTypeQNameUtil for details on getter/setter functionality.
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        [Newtonsoft.Json.JsonIgnore]
        public Gx.Types.EventType KnownType
        {
            get
            {
                return Gx.Types.EventTypeQNameUtil.ConvertFromKnownQName(this._type);
            }
            set
            {
                this._type = Gx.Types.EventTypeQNameUtil.ConvertToKnownQName(value);
            }
        }
        /// <summary>
        ///  The date of this event.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "date", Namespace = "http://gedcomx.org/v1/")]
        [System.Xml.Serialization.SoapElementAttribute(ElementName = "date")]
        [Newtonsoft.Json.JsonProperty("date")]
        public Gx.Conclusion.DateInfo Date
        {
            get
            {
                return this._date;
            }
            set
            {
                this._date = value;
            }
        }
        /// <summary>
        ///  The place of this event.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "place", Namespace = "http://gedcomx.org/v1/")]
        [System.Xml.Serialization.SoapElementAttribute(ElementName = "place")]
        [Newtonsoft.Json.JsonProperty("place")]
        public Gx.Conclusion.PlaceReference Place
        {
            get
            {
                return this._place;
            }
            set
            {
                this._place = value;
            }
        }
        /// <summary>
        ///  The roles played in this event.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "role", Namespace = "http://gedcomx.org/v1/")]
        [System.Xml.Serialization.SoapElementAttribute(ElementName = "role")]
        [Newtonsoft.Json.JsonProperty("roles")]
        public System.Collections.Generic.List<Gx.Conclusion.EventRole> Roles
        {
            get
            {
                return this._roles;
            }
            set
            {
                this._roles = value;
            }
        }

        /**
         * Accept a visitor.
         *
         * @param visitor The visitor.
         */
        public void Accept(GedcomxModelVisitor visitor)
        {
            visitor.VisitEvent(this);
        }
    }
}
